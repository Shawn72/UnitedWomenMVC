//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace UnitedWomenMVC.NAVWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Portals_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/Portals")]
    public partial class Portals : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FnUpdatePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback MiniStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnMemberStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnFosaStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback FndividentstatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLoanGuranteedOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLoanRepaymentSheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLoanGurantorsReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAtmApplicationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAtmBlockingOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCurrent_sharesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnTotalDepositsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnTotal_RepaymentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnchangeemailOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSMSmsgSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateMonthlyContribOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDepositsStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLoanStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnHolidayStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetLoanStatementOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Portals() {
            this.Url = global::UnitedWomenMVC.Properties.Settings.Default.UnitedWomenMVC_NAVWS_Portals;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FnUpdatePasswordCompletedEventHandler FnUpdatePasswordCompleted;
        
        /// <remarks/>
        public event MiniStatementCompletedEventHandler MiniStatementCompleted;
        
        /// <remarks/>
        public event FnMemberStatementCompletedEventHandler FnMemberStatementCompleted;
        
        /// <remarks/>
        public event FnFosaStatementCompletedEventHandler FnFosaStatementCompleted;
        
        /// <remarks/>
        public event FndividentstatementCompletedEventHandler FndividentstatementCompleted;
        
        /// <remarks/>
        public event FnLoanGuranteedCompletedEventHandler FnLoanGuranteedCompleted;
        
        /// <remarks/>
        public event FnLoanRepaymentSheduleCompletedEventHandler FnLoanRepaymentSheduleCompleted;
        
        /// <remarks/>
        public event FnLoanGurantorsReportCompletedEventHandler FnLoanGurantorsReportCompleted;
        
        /// <remarks/>
        public event FnAtmApplicationsCompletedEventHandler FnAtmApplicationsCompleted;
        
        /// <remarks/>
        public event FnAtmBlockingCompletedEventHandler FnAtmBlockingCompleted;
        
        /// <remarks/>
        public event FnCurrent_sharesCompletedEventHandler FnCurrent_sharesCompleted;
        
        /// <remarks/>
        public event FnTotalDepositsCompletedEventHandler FnTotalDepositsCompleted;
        
        /// <remarks/>
        public event FnTotal_RepaymentsCompletedEventHandler FnTotal_RepaymentsCompleted;
        
        /// <remarks/>
        public event FnchangeemailCompletedEventHandler FnchangeemailCompleted;
        
        /// <remarks/>
        public event FnChangePasswordCompletedEventHandler FnChangePasswordCompleted;
        
        /// <remarks/>
        public event FnSessionCompletedEventHandler FnSessionCompleted;
        
        /// <remarks/>
        public event FnSMSmsgSendCompletedEventHandler FnSMSmsgSendCompleted;
        
        /// <remarks/>
        public event FnUpdateMonthlyContribCompletedEventHandler FnUpdateMonthlyContribCompleted;
        
        /// <remarks/>
        public event FnDepositsStatementCompletedEventHandler FnDepositsStatementCompleted;
        
        /// <remarks/>
        public event FnLoanStatementCompletedEventHandler FnLoanStatementCompleted;
        
        /// <remarks/>
        public event FnHolidayStatementCompletedEventHandler FnHolidayStatementCompleted;
        
        /// <remarks/>
        public event FnGetLoanStatementCompletedEventHandler FnGetLoanStatementCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnUpdatePassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnUpdatePassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdatePassword(string memberNo, string newPassword, string idno) {
            object[] results = this.Invoke("FnUpdatePassword", new object[] {
                        memberNo,
                        newPassword,
                        idno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdatePasswordAsync(string memberNo, string newPassword, string idno) {
            this.FnUpdatePasswordAsync(memberNo, newPassword, idno, null);
        }
        
        /// <remarks/>
        public void FnUpdatePasswordAsync(string memberNo, string newPassword, string idno, object userState) {
            if ((this.FnUpdatePasswordOperationCompleted == null)) {
                this.FnUpdatePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdatePasswordOperationCompleted);
            }
            this.InvokeAsync("FnUpdatePassword", new object[] {
                        memberNo,
                        newPassword,
                        idno}, this.FnUpdatePasswordOperationCompleted, userState);
        }
        
        private void OnFnUpdatePasswordOperationCompleted(object arg) {
            if ((this.FnUpdatePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdatePasswordCompleted(this, new FnUpdatePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:MiniStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="MiniStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string MiniStatement(string memberNo) {
            object[] results = this.Invoke("MiniStatement", new object[] {
                        memberNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MiniStatementAsync(string memberNo) {
            this.MiniStatementAsync(memberNo, null);
        }
        
        /// <remarks/>
        public void MiniStatementAsync(string memberNo, object userState) {
            if ((this.MiniStatementOperationCompleted == null)) {
                this.MiniStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMiniStatementOperationCompleted);
            }
            this.InvokeAsync("MiniStatement", new object[] {
                        memberNo}, this.MiniStatementOperationCompleted, userState);
        }
        
        private void OnMiniStatementOperationCompleted(object arg) {
            if ((this.MiniStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MiniStatementCompleted(this, new MiniStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnMemberStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnMemberStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnMemberStatement(string memberNo, string path) {
            this.Invoke("FnMemberStatement", new object[] {
                        memberNo,
                        path});
        }
        
        /// <remarks/>
        public void FnMemberStatementAsync(string memberNo, string path) {
            this.FnMemberStatementAsync(memberNo, path, null);
        }
        
        /// <remarks/>
        public void FnMemberStatementAsync(string memberNo, string path, object userState) {
            if ((this.FnMemberStatementOperationCompleted == null)) {
                this.FnMemberStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnMemberStatementOperationCompleted);
            }
            this.InvokeAsync("FnMemberStatement", new object[] {
                        memberNo,
                        path}, this.FnMemberStatementOperationCompleted, userState);
        }
        
        private void OnFnMemberStatementOperationCompleted(object arg) {
            if ((this.FnMemberStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnMemberStatementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnFosaStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnFosaStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnFosaStatement(string account_No, string path) {
            this.Invoke("FnFosaStatement", new object[] {
                        account_No,
                        path});
        }
        
        /// <remarks/>
        public void FnFosaStatementAsync(string account_No, string path) {
            this.FnFosaStatementAsync(account_No, path, null);
        }
        
        /// <remarks/>
        public void FnFosaStatementAsync(string account_No, string path, object userState) {
            if ((this.FnFosaStatementOperationCompleted == null)) {
                this.FnFosaStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnFosaStatementOperationCompleted);
            }
            this.InvokeAsync("FnFosaStatement", new object[] {
                        account_No,
                        path}, this.FnFosaStatementOperationCompleted, userState);
        }
        
        private void OnFnFosaStatementOperationCompleted(object arg) {
            if ((this.FnFosaStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnFosaStatementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:Fndividentstatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="Fndividentstatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Fndividentstatement(string no, string path) {
            this.Invoke("Fndividentstatement", new object[] {
                        no,
                        path});
        }
        
        /// <remarks/>
        public void FndividentstatementAsync(string no, string path) {
            this.FndividentstatementAsync(no, path, null);
        }
        
        /// <remarks/>
        public void FndividentstatementAsync(string no, string path, object userState) {
            if ((this.FndividentstatementOperationCompleted == null)) {
                this.FndividentstatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFndividentstatementOperationCompleted);
            }
            this.InvokeAsync("Fndividentstatement", new object[] {
                        no,
                        path}, this.FndividentstatementOperationCompleted, userState);
        }
        
        private void OnFndividentstatementOperationCompleted(object arg) {
            if ((this.FndividentstatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FndividentstatementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnLoanGuranteed", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnLoanGuranteed_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnLoanGuranteed(string member_No, string path) {
            this.Invoke("FnLoanGuranteed", new object[] {
                        member_No,
                        path});
        }
        
        /// <remarks/>
        public void FnLoanGuranteedAsync(string member_No, string path) {
            this.FnLoanGuranteedAsync(member_No, path, null);
        }
        
        /// <remarks/>
        public void FnLoanGuranteedAsync(string member_No, string path, object userState) {
            if ((this.FnLoanGuranteedOperationCompleted == null)) {
                this.FnLoanGuranteedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLoanGuranteedOperationCompleted);
            }
            this.InvokeAsync("FnLoanGuranteed", new object[] {
                        member_No,
                        path}, this.FnLoanGuranteedOperationCompleted, userState);
        }
        
        private void OnFnLoanGuranteedOperationCompleted(object arg) {
            if ((this.FnLoanGuranteedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLoanGuranteedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnLoanRepaymentShedule", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnLoanRepaymentShedule_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnLoanRepaymentShedule(string loan_No, string path) {
            this.Invoke("FnLoanRepaymentShedule", new object[] {
                        loan_No,
                        path});
        }
        
        /// <remarks/>
        public void FnLoanRepaymentSheduleAsync(string loan_No, string path) {
            this.FnLoanRepaymentSheduleAsync(loan_No, path, null);
        }
        
        /// <remarks/>
        public void FnLoanRepaymentSheduleAsync(string loan_No, string path, object userState) {
            if ((this.FnLoanRepaymentSheduleOperationCompleted == null)) {
                this.FnLoanRepaymentSheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLoanRepaymentSheduleOperationCompleted);
            }
            this.InvokeAsync("FnLoanRepaymentShedule", new object[] {
                        loan_No,
                        path}, this.FnLoanRepaymentSheduleOperationCompleted, userState);
        }
        
        private void OnFnLoanRepaymentSheduleOperationCompleted(object arg) {
            if ((this.FnLoanRepaymentSheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLoanRepaymentSheduleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnLoanGurantorsReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnLoanGurantorsReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnLoanGurantorsReport(string member_No, string path) {
            this.Invoke("FnLoanGurantorsReport", new object[] {
                        member_No,
                        path});
        }
        
        /// <remarks/>
        public void FnLoanGurantorsReportAsync(string member_No, string path) {
            this.FnLoanGurantorsReportAsync(member_No, path, null);
        }
        
        /// <remarks/>
        public void FnLoanGurantorsReportAsync(string member_No, string path, object userState) {
            if ((this.FnLoanGurantorsReportOperationCompleted == null)) {
                this.FnLoanGurantorsReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLoanGurantorsReportOperationCompleted);
            }
            this.InvokeAsync("FnLoanGurantorsReport", new object[] {
                        member_No,
                        path}, this.FnLoanGurantorsReportOperationCompleted, userState);
        }
        
        private void OnFnLoanGurantorsReportOperationCompleted(object arg) {
            if ((this.FnLoanGurantorsReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLoanGurantorsReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAtmApplications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAtmApplications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnAtmApplications(string account) {
            this.Invoke("FnAtmApplications", new object[] {
                        account});
        }
        
        /// <remarks/>
        public void FnAtmApplicationsAsync(string account) {
            this.FnAtmApplicationsAsync(account, null);
        }
        
        /// <remarks/>
        public void FnAtmApplicationsAsync(string account, object userState) {
            if ((this.FnAtmApplicationsOperationCompleted == null)) {
                this.FnAtmApplicationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAtmApplicationsOperationCompleted);
            }
            this.InvokeAsync("FnAtmApplications", new object[] {
                        account}, this.FnAtmApplicationsOperationCompleted, userState);
        }
        
        private void OnFnAtmApplicationsOperationCompleted(object arg) {
            if ((this.FnAtmApplicationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAtmApplicationsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAtmBlocking", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAtmBlocking_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnAtmBlocking(string account, string reasonForBlock) {
            this.Invoke("FnAtmBlocking", new object[] {
                        account,
                        reasonForBlock});
        }
        
        /// <remarks/>
        public void FnAtmBlockingAsync(string account, string reasonForBlock) {
            this.FnAtmBlockingAsync(account, reasonForBlock, null);
        }
        
        /// <remarks/>
        public void FnAtmBlockingAsync(string account, string reasonForBlock, object userState) {
            if ((this.FnAtmBlockingOperationCompleted == null)) {
                this.FnAtmBlockingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAtmBlockingOperationCompleted);
            }
            this.InvokeAsync("FnAtmBlocking", new object[] {
                        account,
                        reasonForBlock}, this.FnAtmBlockingOperationCompleted, userState);
        }
        
        private void OnFnAtmBlockingOperationCompleted(object arg) {
            if ((this.FnAtmBlockingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAtmBlockingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnCurrent_shares", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnCurrent_shares_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal FnCurrent_shares(string mno, string year) {
            object[] results = this.Invoke("FnCurrent_shares", new object[] {
                        mno,
                        year});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void FnCurrent_sharesAsync(string mno, string year) {
            this.FnCurrent_sharesAsync(mno, year, null);
        }
        
        /// <remarks/>
        public void FnCurrent_sharesAsync(string mno, string year, object userState) {
            if ((this.FnCurrent_sharesOperationCompleted == null)) {
                this.FnCurrent_sharesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCurrent_sharesOperationCompleted);
            }
            this.InvokeAsync("FnCurrent_shares", new object[] {
                        mno,
                        year}, this.FnCurrent_sharesOperationCompleted, userState);
        }
        
        private void OnFnCurrent_sharesOperationCompleted(object arg) {
            if ((this.FnCurrent_sharesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCurrent_sharesCompleted(this, new FnCurrent_sharesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnTotalDeposits", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnTotalDeposits_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal FnTotalDeposits(string mno, string year) {
            object[] results = this.Invoke("FnTotalDeposits", new object[] {
                        mno,
                        year});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void FnTotalDepositsAsync(string mno, string year) {
            this.FnTotalDepositsAsync(mno, year, null);
        }
        
        /// <remarks/>
        public void FnTotalDepositsAsync(string mno, string year, object userState) {
            if ((this.FnTotalDepositsOperationCompleted == null)) {
                this.FnTotalDepositsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnTotalDepositsOperationCompleted);
            }
            this.InvokeAsync("FnTotalDeposits", new object[] {
                        mno,
                        year}, this.FnTotalDepositsOperationCompleted, userState);
        }
        
        private void OnFnTotalDepositsOperationCompleted(object arg) {
            if ((this.FnTotalDepositsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnTotalDepositsCompleted(this, new FnTotalDepositsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnTotal_Repayments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnTotal_Repayments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal FnTotal_Repayments(string mno, string year) {
            object[] results = this.Invoke("FnTotal_Repayments", new object[] {
                        mno,
                        year});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void FnTotal_RepaymentsAsync(string mno, string year) {
            this.FnTotal_RepaymentsAsync(mno, year, null);
        }
        
        /// <remarks/>
        public void FnTotal_RepaymentsAsync(string mno, string year, object userState) {
            if ((this.FnTotal_RepaymentsOperationCompleted == null)) {
                this.FnTotal_RepaymentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnTotal_RepaymentsOperationCompleted);
            }
            this.InvokeAsync("FnTotal_Repayments", new object[] {
                        mno,
                        year}, this.FnTotal_RepaymentsOperationCompleted, userState);
        }
        
        private void OnFnTotal_RepaymentsOperationCompleted(object arg) {
            if ((this.FnTotal_RepaymentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnTotal_RepaymentsCompleted(this, new FnTotal_RepaymentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:Fnchangeemail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="Fnchangeemail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Fnchangeemail(string member, string email) {
            this.Invoke("Fnchangeemail", new object[] {
                        member,
                        email});
        }
        
        /// <remarks/>
        public void FnchangeemailAsync(string member, string email) {
            this.FnchangeemailAsync(member, email, null);
        }
        
        /// <remarks/>
        public void FnchangeemailAsync(string member, string email, object userState) {
            if ((this.FnchangeemailOperationCompleted == null)) {
                this.FnchangeemailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnchangeemailOperationCompleted);
            }
            this.InvokeAsync("Fnchangeemail", new object[] {
                        member,
                        email}, this.FnchangeemailOperationCompleted, userState);
        }
        
        private void OnFnchangeemailOperationCompleted(object arg) {
            if ((this.FnchangeemailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnchangeemailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnChangePassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnChangePassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnChangePassword(string memb, string newpass, string oldpass) {
            object[] results = this.Invoke("FnChangePassword", new object[] {
                        memb,
                        newpass,
                        oldpass});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnChangePasswordAsync(string memb, string newpass, string oldpass) {
            this.FnChangePasswordAsync(memb, newpass, oldpass, null);
        }
        
        /// <remarks/>
        public void FnChangePasswordAsync(string memb, string newpass, string oldpass, object userState) {
            if ((this.FnChangePasswordOperationCompleted == null)) {
                this.FnChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("FnChangePassword", new object[] {
                        memb,
                        newpass,
                        oldpass}, this.FnChangePasswordOperationCompleted, userState);
        }
        
        private void OnFnChangePasswordOperationCompleted(object arg) {
            if ((this.FnChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnChangePasswordCompleted(this, new FnChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnSession", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnSession_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnSession(string no, string passwod) {
            object[] results = this.Invoke("FnSession", new object[] {
                        no,
                        passwod});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnSessionAsync(string no, string passwod) {
            this.FnSessionAsync(no, passwod, null);
        }
        
        /// <remarks/>
        public void FnSessionAsync(string no, string passwod, object userState) {
            if ((this.FnSessionOperationCompleted == null)) {
                this.FnSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSessionOperationCompleted);
            }
            this.InvokeAsync("FnSession", new object[] {
                        no,
                        passwod}, this.FnSessionOperationCompleted, userState);
        }
        
        private void OnFnSessionOperationCompleted(object arg) {
            if ((this.FnSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSessionCompleted(this, new FnSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnSMSmsgSend", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnSMSmsgSend_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnSMSmsgSend(string phoneNo, string message) {
            this.Invoke("FnSMSmsgSend", new object[] {
                        phoneNo,
                        message});
        }
        
        /// <remarks/>
        public void FnSMSmsgSendAsync(string phoneNo, string message) {
            this.FnSMSmsgSendAsync(phoneNo, message, null);
        }
        
        /// <remarks/>
        public void FnSMSmsgSendAsync(string phoneNo, string message, object userState) {
            if ((this.FnSMSmsgSendOperationCompleted == null)) {
                this.FnSMSmsgSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSMSmsgSendOperationCompleted);
            }
            this.InvokeAsync("FnSMSmsgSend", new object[] {
                        phoneNo,
                        message}, this.FnSMSmsgSendOperationCompleted, userState);
        }
        
        private void OnFnSMSmsgSendOperationCompleted(object arg) {
            if ((this.FnSMSmsgSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSMSmsgSendCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnUpdateMonthlyContrib", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnUpdateMonthlyContrib_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnUpdateMonthlyContrib(string member_No, decimal updated_Fig) {
            this.Invoke("FnUpdateMonthlyContrib", new object[] {
                        member_No,
                        updated_Fig});
        }
        
        /// <remarks/>
        public void FnUpdateMonthlyContribAsync(string member_No, decimal updated_Fig) {
            this.FnUpdateMonthlyContribAsync(member_No, updated_Fig, null);
        }
        
        /// <remarks/>
        public void FnUpdateMonthlyContribAsync(string member_No, decimal updated_Fig, object userState) {
            if ((this.FnUpdateMonthlyContribOperationCompleted == null)) {
                this.FnUpdateMonthlyContribOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateMonthlyContribOperationCompleted);
            }
            this.InvokeAsync("FnUpdateMonthlyContrib", new object[] {
                        member_No,
                        updated_Fig}, this.FnUpdateMonthlyContribOperationCompleted, userState);
        }
        
        private void OnFnUpdateMonthlyContribOperationCompleted(object arg) {
            if ((this.FnUpdateMonthlyContribCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateMonthlyContribCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDepositsStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDepositsStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnDepositsStatement(string account_No, string path) {
            this.Invoke("FnDepositsStatement", new object[] {
                        account_No,
                        path});
        }
        
        /// <remarks/>
        public void FnDepositsStatementAsync(string account_No, string path) {
            this.FnDepositsStatementAsync(account_No, path, null);
        }
        
        /// <remarks/>
        public void FnDepositsStatementAsync(string account_No, string path, object userState) {
            if ((this.FnDepositsStatementOperationCompleted == null)) {
                this.FnDepositsStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDepositsStatementOperationCompleted);
            }
            this.InvokeAsync("FnDepositsStatement", new object[] {
                        account_No,
                        path}, this.FnDepositsStatementOperationCompleted, userState);
        }
        
        private void OnFnDepositsStatementOperationCompleted(object arg) {
            if ((this.FnDepositsStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDepositsStatementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnLoanStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnLoanStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnLoanStatement(string loan_No, string path) {
            this.Invoke("FnLoanStatement", new object[] {
                        loan_No,
                        path});
        }
        
        /// <remarks/>
        public void FnLoanStatementAsync(string loan_No, string path) {
            this.FnLoanStatementAsync(loan_No, path, null);
        }
        
        /// <remarks/>
        public void FnLoanStatementAsync(string loan_No, string path, object userState) {
            if ((this.FnLoanStatementOperationCompleted == null)) {
                this.FnLoanStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLoanStatementOperationCompleted);
            }
            this.InvokeAsync("FnLoanStatement", new object[] {
                        loan_No,
                        path}, this.FnLoanStatementOperationCompleted, userState);
        }
        
        private void OnFnLoanStatementOperationCompleted(object arg) {
            if ((this.FnLoanStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLoanStatementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnHolidayStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnHolidayStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnHolidayStatement(string account_No, string path) {
            this.Invoke("FnHolidayStatement", new object[] {
                        account_No,
                        path});
        }
        
        /// <remarks/>
        public void FnHolidayStatementAsync(string account_No, string path) {
            this.FnHolidayStatementAsync(account_No, path, null);
        }
        
        /// <remarks/>
        public void FnHolidayStatementAsync(string account_No, string path, object userState) {
            if ((this.FnHolidayStatementOperationCompleted == null)) {
                this.FnHolidayStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnHolidayStatementOperationCompleted);
            }
            this.InvokeAsync("FnHolidayStatement", new object[] {
                        account_No,
                        path}, this.FnHolidayStatementOperationCompleted, userState);
        }
        
        private void OnFnHolidayStatementOperationCompleted(object arg) {
            if ((this.FnHolidayStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnHolidayStatementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGetLoanStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGetLoanStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGetLoanStatement(string loan_product_type, string path, string member_number) {
            this.Invoke("FnGetLoanStatement", new object[] {
                        loan_product_type,
                        path,
                        member_number});
        }
        
        /// <remarks/>
        public void FnGetLoanStatementAsync(string loan_product_type, string path, string member_number) {
            this.FnGetLoanStatementAsync(loan_product_type, path, member_number, null);
        }
        
        /// <remarks/>
        public void FnGetLoanStatementAsync(string loan_product_type, string path, string member_number, object userState) {
            if ((this.FnGetLoanStatementOperationCompleted == null)) {
                this.FnGetLoanStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetLoanStatementOperationCompleted);
            }
            this.InvokeAsync("FnGetLoanStatement", new object[] {
                        loan_product_type,
                        path,
                        member_number}, this.FnGetLoanStatementOperationCompleted, userState);
        }
        
        private void OnFnGetLoanStatementOperationCompleted(object arg) {
            if ((this.FnGetLoanStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetLoanStatementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnUpdatePasswordCompletedEventHandler(object sender, FnUpdatePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MiniStatementCompletedEventHandler(object sender, MiniStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MiniStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MiniStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnMemberStatementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnFosaStatementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FndividentstatementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnLoanGuranteedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnLoanRepaymentSheduleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnLoanGurantorsReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAtmApplicationsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAtmBlockingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnCurrent_sharesCompletedEventHandler(object sender, FnCurrent_sharesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCurrent_sharesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCurrent_sharesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnTotalDepositsCompletedEventHandler(object sender, FnTotalDepositsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnTotalDepositsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnTotalDepositsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnTotal_RepaymentsCompletedEventHandler(object sender, FnTotal_RepaymentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnTotal_RepaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnTotal_RepaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnchangeemailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnChangePasswordCompletedEventHandler(object sender, FnChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnSessionCompletedEventHandler(object sender, FnSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnSMSmsgSendCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnUpdateMonthlyContribCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnDepositsStatementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnLoanStatementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnHolidayStatementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnGetLoanStatementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591